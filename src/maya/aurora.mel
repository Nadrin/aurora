// Aurora Renderer
// Copyright (c) 2013 Michal Siejak
// Licensed under MIT open-source license, see COPYING.txt file for details.

global proc auroraInit()
{
	renderer
		-rendererUIName             "Aurora"
		-renderProcedure            "auroraRenderStart"
		-renderRegionProcedure      "mayaRenderRegion"
//		-iprRenderProcedure         "auroraIprRenderProcName"
//		-isRunningIprProcedure      "auroraIsRunningIpr"
//		-startIprRenderProcedure    "auroraIprRenderStart"
//		-stopIprRenderProcedure     "auroraIprRenderStop"
//		-pauseIprRenderProcedure    "auroraIprRenderPause"
//		-refreshIprRenderProcedure  "auroraIprRenderRefresh"
//		-changeIprRegionProcedure   "auroraIprRenderChangeRegion"
		-addGlobalsTab              "Common" "createMayaSoftwareCommonGlobalsTab" "updateMayaSoftwareCommonGlobalsTab"
		Aurora;
}

global proc auroraDestroy()
{
	renderer -unregisterRenderer Aurora;
}

// Render procedures
global proc auroraRenderStart(int $width, int $height, int $doShadows, int $doGlowPass, string $camera, string $opts)
{
	auroraRender -w $width -h $height -c $camera;
}

// IPR render procedures
global proc auroraIprRenderStart(string $editor, int $width, int $height, string $camera)
{
	global int $auroraIprMode;
	$auroraIprMode = true;
	auroraRender -ipr true -w $width -h $height -c $camera;
}

global proc auroraIprRenderPause(string $editor, int $pause)
{
	auroraRender -e -p $pause;
}

global proc auroraIprRenderStop()
{
	global int $auroraIprMode;
	$auroraIprMode = false;
	auroraRender -e -ipr false; 
}

global proc auroraIprRenderRefresh()
{
	auroraRender -e -ipr true;
}

global proc auroraIprRenderChangeRegion(string $editor)
{
	warning("Aurora: Changing IPR region is not supported!\n");
}

// Query procedures
global proc string auroraIprRenderProcName()
{
	return "auroraRenderStart";
}

global proc int auroraIsRunningIpr()
{
	global int $auroraIprMode;
	return $auroraIprMode;
}
